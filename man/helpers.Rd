% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{helpers}
\alias{helpers}
\alias{define}
\alias{reduce.reg}
\alias{get.de.genes}
\alias{percent.to.labels}
\alias{colours.lmh}
\alias{heatmaps.pal}
\alias{sym.breaks}
\alias{rankPathwaymaps}
\alias{theme.heatmap}
\alias{save.pheatmap}
\alias{save.genemaps}
\alias{save.boxplots}
\title{Helper functions}
\usage{
define(Class, ...)

reduce.reg(
  reg.name,
  waitForJobs = TRUE,
  f = function(aggr, res) rbind(aggr, res$decisions),
  ...
)

get.de.genes(
  X,
  y,
  n.min = 100,
  return.toptable = FALSE,
  robust = FALSE,
  logFC = 0.25,
  adj.P.Val = 0.05,
  ...
)

percent.to.labels(percent, label.na = "-")

colours.lmh()

heatmaps.pal(n = 19)

sym.breaks(mat, n = 19)

rankPathwaymaps(
  object,
  what = "signatures",
  max.out = 5,
  return.table = FALSE,
  id.path = getPathways(object),
  sig.ids = getSignatures(object)
)

theme.heatmap()

save.pheatmap(
  x,
  filename,
  dev = grDevices::png,
  width = 7,
  height = 7,
  dev.args = list(res = 150, units = "in")
)

save.genemaps(
  ist.results,
  dir.out,
  id.paths = getPathways(ist.results),
  cex.width = 1,
  cex.height = 1,
  ...
)

save.boxplots(
  ist.results,
  dir.out,
  id.paths = getPathways(ist.results),
  k = 4,
  width = 8,
  height = 4,
  ...
)
}
\arguments{
\item{Class}{character, as in \code{new()}}

\item{...}{in \code{save.boxplots()}, parameters passed to
\code{plot.ist.boxplots()}}

\item{reg.name}{character, name of the registry}

\item{f}{function to reduce results, of the form \code{f(aggr, res)},
that specifies how to combine the partially reduced results \code{aggr}
with the next result \code{res}. The default value just binds the
rows of every (decisions) data.frame in the registry.}

\item{X, y}{matrix (genes in columns) and vector with response variable,
which can be quantitative or two-level factor character}

\item{n.min}{integer, minimum genes to report (not less than 10)}

\item{return.toptable}{logical, return the topTable or just the
differential genes? (default: \code{FALSE})}

\item{robust}{logical, whether to use
robust estimates in \code{limma::eBayes} (if \code{TRUE}, the
\code{statmod} package needs to be installed)}

\item{logFC, adj.P.Val}{numeric, cutoffs for log2FC and adjusted p-value}

\item{label.na}{character to display when percentage is NA}

\item{n}{numeric, number of colours in heatmap}

\item{mat}{numeric matrix to compute the range from}

\item{object}{the \code{ist.results} object holding the results}

\item{what}{character, what to rank; either \code{"signatures"}
or \code{"pathways"}}

\item{max.out}{numeric, maximum number of entities to return
(defaults to 5, can be set to \code{Inf})}

\item{return.table}{logical, whether to return the table with
the metrics used for prioritising}

\item{id.path, sig.ids}{ids of pathways and signatures to prioritise
(defaults to all)}

\item{x}{pheatmap object, or a list with a pheatmap object,
as returned by the plotting functions}

\item{filename}{output file (with extension)}

\item{dev}{function, graphical device to use}

\item{width, height}{numeric, figure size (inches)}

\item{dev.args}{list of arguments to the \code{dev} function}

\item{ist.results}{object to plot}

\item{dir.out}{character, directory to save plots (will be created
if it does not exist)}

\item{id.paths}{character, pathway ids to plot
(defaults to all bin pathways)}

\item{cex.width, cex.height}{numeric values, scaling factor with respect
to default dimensions. The defaults are guesses that attempt to
display a reasonable plot.}

\item{k}{integer, number of plots per page}

\item{percentage}{numeric vector to translate to plot labels}
}
\value{
\code{reduce.reg()} returns the reduced results, typically
a data.frame

\code{find.de.genes()}: if \code{return.toptable = TRUE},
a list with two slots: the data.frame \code{topTable}
with the whole DE output,
and a character vector \code{de.genes} with the significant IDs.
If \code{return.toptable = FALSE}, just a character vector
of \code{de.genes}.

A character vector if \code{return.table = FALSE}, a
\code{data.table} otherwise
}
\description{
\code{define()} allows making \code{new()} objects with
ellipsis, by matching the class slots to the arguments in \code{...}
and ignoring the rest (unlike \code{new()}, which raises error)

\code{reduce.reg()} applies the desired reduce function
to a registry with \code{batchtools}

\code{find.de.genes()} obtains a list of differential
genes from a matrix of expression values and a response
using \code{limma}

Metrics are ranked according to three criteria:
\describe{
\item{1}{Mean absolute error to 100\%}
\item{2}{Mean absolute error to 100\%, but not penalising overshoot}
\item{3}{Mean percentage}
}
A rank is computed for each one, and then the ranks are averaged into
a final rank.
Z-scores are also provided.

Divide all the specified pathways in grous of \code{k}
pathways and draw their boxplots
}
\examples{
data(sample.data.ist)
## This gives an error because "a" is not a slot in "ist.discriminator"
\dontrun{
ist.discr <- with(sample.data.ist, {
methods::new(
"ist.discriminator", 
X = X.hsa, 
y = y.hsa, 
org.to = "hsapiens", 
a = 3
)
})
}
## This works
ist.discr <- with(sample.data.ist, {
define(
"ist.discriminator", 
X = X.hsa, 
y = y.hsa, 
org.to = "hsapiens", 
id.oc = rep(TRUE, nrow(X.hsa)), 
id.bin = rep(TRUE, nrow(X.hsa)), 
id.ref = rep(TRUE, nrow(X.hsa)), 
id.ist = rep(TRUE, nrow(X.hsa)), 
a = 3
)
})
ist.discr


data(sample.data.ist)
## don't show the renamed intercept warning
suppressWarnings({
de.genes <- with(sample.data.ist, {
get.de.genes(X.hsa, y.hsa)
})
de.genes.toptable <- with(sample.data.ist, {
get.de.genes(X.hsa, y.hsa, return.toptable = TRUE)
}) 
})
str(de.genes)
str(de.genes.toptable)

percent.to.labels(c(107.2223, 24.4, NA))

colours.lmh()

heatmaps.pal(13)

sym.breaks(matrix(1:10, nrow = 2))

theme.heatmap()

}
