% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{predict-ist}
\alias{predict-ist}
\alias{predict.ist.translator}
\alias{predict.ist.signatures}
\alias{predict.ist.oc}
\alias{predict.ist.bin}
\alias{predict.ist.discriminator}
\alias{predict.ist.pathways}
\title{Predict methods}
\usage{
predict.ist.translator(object, newdata, ...)

predict.ist.signatures(object, newdata, ...)

predict.ist.oc(object, newdata, ...)

predict.ist.bin(object, newdata, type = "decision", ...)

predict.ist.discriminator(
  object,
  newdata,
  type = "decision",
  ncomp = c(1, 2),
  ...
)

predict.ist.pathways(object, newdata, type = "decision", ncomp = c(1, 2), ...)
}
\arguments{
\item{object}{a fitted \code{ist.translator} for
\code{predict.ist.translator()},
\code{ist.discriminator} for \code{predict.ist.discriminator()},
\code{ist.mod.oc} for \code{predict.ist.oc()}, and
\code{ist.mod.bin} for \code{predict.ist.bin()}}

\item{newdata}{matrix, samples in rows and features in columns,
must have names}

\item{...}{\code{predict.ist.translator()} ignores it.
\code{predict.ist.discriminator()} passes it to
\code{predict.ist.oc()} (which ignores it) and \code{predict.ist.bin()}
(which ignores it unless \code{type == "scores"}, passing
\code{...} to \code{predict()} for \code{pls} objects)}

\item{type}{character, type of prediction (\code{"decision"},
\code{"scores"})}

\item{ncomp}{numeric vector, only for binary classifiers (isd, isa)
and \code{type = "scores"}, which components to return?
Passed to \code{predict} on the \code{mvr} object}
}
\value{
\code{predict.ist.translator()} returns a matrix
with the transformed signatures.

\code{predict.ist.signatures()} returns a list of matrices
with the transformed signatures, one per signature.
\code{predict.ist.oc()} and \code{predict.ist.bin(type = "decision")}
return a data.frame with the decision values.
\code{predict.ist.bin(type = "scores")} returns a data.frame with the
principal components as columns.
\code{predict.ist.discriminator()} wraps around both models,
returning a data.frame where \code{flavour} and \code{sample} are colnames
}
\description{
\code{predict.ist.translator()} in-silico-treats
data from org.to
using a previously fitted \code{ist.translator}. Currently just
adds the fold changes to the matching genes.

\code{predict.ist.signatures()} in-silico-treats
data from org.to
using a previously fitted \code{predict.ist.signatures}.

\code{predict.ist.oc()} applies a
fitted \code{ist.mod.oc}
to new data, matching colnames.

\code{predict.ist.bin()} applies a fitted
\code{ist.mod.bin}
to new data, matching colnames.

\code{predict.ist.discriminator()} applies all the fitted
discriminator models within the object to
new data (in-silico-treated or not)

\code{predict.ist.pathways()} applies all the fitted
oc/bin models within the object to
new data (in-silico-treated or not)
}
